name: Vercel Preview URL Lighthouse Audit
on: push
jobs:
  generate_lighthouse_audit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # TODO: see if we can get the github sha value from github.event object
      - name: Set GITHUB_SHA env var
        run: echo "GITHUB_SHA=$(echo $GITHUB_SHA)" >> $GITHUB_ENV

      - uses: jwalton/gh-find-current-pr@v1
        id: findPr

      - name: test PR
        run: echo "Your PR is ${PR}"

      - name: Capture Vercel URL
        id: vercel_preview_url
        uses: zentered/vercel-preview-url@v1.0.0
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          vercel_team_id: 'team_2b2sAtsGvmJrVpaHsBqigXVu'
          vercel_project_id: 'prj_oRkgj6YBJ2hfDswwwu8mmVA12Ahv'

      - name: Wait for Vercel deployment
        uses: UnlyEd/github-action-await-vercel@v1.2.14
        id: await-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: ${{ steps.vercel_preview_url.outputs.preview_url }}
          timeout: 180 # Wait for x seconds before failing

      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v9
        env:
          LHCI_BUILD_CONTEXT__CURRENT_HASH: $GITHUB_SHA
        with:
          urls: |
            https://${{ steps.vercel_preview_url.outputs.preview_url }}
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.LHCI_GITHUB_APP_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')
             core.setOutput("comment", comment);

      - name: Add report to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        with:
          number: 52
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
